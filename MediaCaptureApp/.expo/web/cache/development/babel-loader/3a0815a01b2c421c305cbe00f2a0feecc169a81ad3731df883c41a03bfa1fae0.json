{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { StatusBar } from 'expo-status-bar';\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CameraScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var fileInputRef = useRef(null);\n  var handleFileSelection = function handleFileSelection(e) {\n    try {\n      var file = e.target.files[0];\n      if (!file) return;\n      var mediaType = file.type.startsWith('image') ? 'photo' : 'video';\n      var fileUri = URL.createObjectURL(file);\n      console.log(\"File selected:\", file.name, \"Type:\", mediaType);\n      navigation.navigate('Preview', {\n        mediaUri: fileUri,\n        mediaType: mediaType,\n        webFile: {\n          name: file.name,\n          size: file.size,\n          type: file.type\n        }\n      });\n    } catch (error) {\n      console.error(\"Error selecting file:\", error);\n      Alert.alert(\"Error\", \"Failed to select media file\");\n    }\n  };\n  var openImagePicker = function openImagePicker() {\n    if (fileInputRef.current) {\n      fileInputRef.current.accept = \"image/*\";\n      fileInputRef.current.click();\n    }\n  };\n  var openVideoPicker = function openVideoPicker() {\n    if (fileInputRef.current) {\n      fileInputRef.current.accept = \"video/*\";\n      fileInputRef.current.click();\n    }\n  };\n  if (isLoading) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#ffffff\"\n      })\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsxs(View, {\n      style: styles.webCameraContainer,\n      children: [_jsx(Text, {\n        style: styles.titleText,\n        children: \"Media Capture App\"\n      }), _jsx(Text, {\n        style: styles.messageText,\n        children: \"Camera functionality is limited on web.\"\n      }), _jsx(Text, {\n        style: styles.messageText,\n        children: \"Please upload a photo or video from your device:\"\n      }), Platform.OS === 'web' && _jsx(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        style: {\n          display: 'none'\n        },\n        onChange: handleFileSelection\n      }), _jsxs(View, {\n        style: styles.buttonContainer,\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.uploadButton,\n          onPress: openImagePicker,\n          accessibilityLabel: \"Upload a photo\",\n          children: [_jsx(Ionicons, {\n            name: \"camera\",\n            size: 36,\n            color: \"white\"\n          }), _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Upload Photo\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.uploadButton,\n          onPress: openVideoPicker,\n          accessibilityLabel: \"Upload a video\",\n          children: [_jsx(Ionicons, {\n            name: \"videocam\",\n            size: 36,\n            color: \"white\"\n          }), _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Upload Video\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black'\n  },\n  webCameraContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  titleText: {\n    color: '#4A90E2',\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  messageText: {\n    color: 'white',\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 15\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '100%',\n    marginTop: 30\n  },\n  uploadButton: {\n    backgroundColor: '#4A90E2',\n    padding: 20,\n    borderRadius: 10,\n    alignItems: 'center',\n    width: '45%'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    marginTop: 10\n  }\n});","map":{"version":3,"names":["React","useState","useRef","StyleSheet","View","Text","TouchableOpacity","Alert","ActivityIndicator","Platform","StatusBar","Ionicons","jsx","_jsx","jsxs","_jsxs","CameraScreen","_ref","navigation","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","fileInputRef","handleFileSelection","e","file","target","files","mediaType","type","startsWith","fileUri","URL","createObjectURL","console","log","name","navigate","mediaUri","webFile","size","error","alert","openImagePicker","current","accept","click","openVideoPicker","style","styles","container","children","color","webCameraContainer","titleText","messageText","OS","ref","display","onChange","buttonContainer","uploadButton","onPress","accessibilityLabel","buttonText","create","flex","backgroundColor","justifyContent","alignItems","padding","fontSize","fontWeight","textAlign","marginBottom","flexDirection","width","marginTop","borderRadius"],"sources":["/home/runner/workspace/MediaCaptureApp/src/components/CameraScreen.web.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity, Alert, ActivityIndicator, Platform } from 'react-native';\nimport { StatusBar } from 'expo-status-bar';\nimport { Ionicons } from '@expo/vector-icons';\n\n// Simple web implementation of CameraScreen for file upload\nexport default function CameraScreen({ navigation }) {\n  const [isLoading, setIsLoading] = useState(false);\n  const fileInputRef = useRef(null);\n\n  // Handle the file selection\n  const handleFileSelection = (e) => {\n    try {\n      const file = e.target.files[0];\n      if (!file) return;\n\n      // Determine if this is a photo or video based on MIME type\n      const mediaType = file.type.startsWith('image') ? 'photo' : 'video';\n      const fileUri = URL.createObjectURL(file);\n      \n      console.log(\"File selected:\", file.name, \"Type:\", mediaType);\n\n      // Navigate to preview screen with file details\n      navigation.navigate('Preview', {\n        mediaUri: fileUri,\n        mediaType: mediaType,\n        webFile: {\n          name: file.name,\n          size: file.size,\n          type: file.type\n        }\n      });\n    } catch (error) {\n      console.error(\"Error selecting file:\", error);\n      Alert.alert(\"Error\", \"Failed to select media file\");\n    }\n  };\n\n  // Trigger file selection for images\n  const openImagePicker = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.accept = \"image/*\";\n      fileInputRef.current.click();\n    }\n  };\n\n  // Trigger file selection for videos\n  const openVideoPicker = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.accept = \"video/*\";\n      fileInputRef.current.click();\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <View style={styles.container}>\n        <ActivityIndicator size=\"large\" color=\"#ffffff\" />\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"light\" />\n      \n      <View style={styles.webCameraContainer}>\n        <Text style={styles.titleText}>\n          Media Capture App\n        </Text>\n        \n        <Text style={styles.messageText}>\n          Camera functionality is limited on web.\n        </Text>\n        <Text style={styles.messageText}>\n          Please upload a photo or video from your device:\n        </Text>\n        \n        {/* Hidden file input - only available in web environment */}\n        {Platform.OS === 'web' && (\n          <input\n            type=\"file\"\n            ref={fileInputRef}\n            style={{ display: 'none' }}\n            onChange={handleFileSelection}\n          />\n        )}\n        \n        <View style={styles.buttonContainer}>\n          <TouchableOpacity \n            style={styles.uploadButton} \n            onPress={openImagePicker}\n            accessibilityLabel=\"Upload a photo\"\n          >\n            <Ionicons name=\"camera\" size={36} color=\"white\" />\n            <Text style={styles.buttonText}>Upload Photo</Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity \n            style={styles.uploadButton} \n            onPress={openVideoPicker}\n            accessibilityLabel=\"Upload a video\"\n          >\n            <Ionicons name=\"videocam\" size={36} color=\"white\" />\n            <Text style={styles.buttonText}>Upload Video</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n  },\n  webCameraContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  titleText: {\n    color: '#4A90E2',\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  messageText: {\n    color: 'white',\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '100%',\n    marginTop: 30,\n  },\n  uploadButton: {\n    backgroundColor: '#4A90E2',\n    padding: 20,\n    borderRadius: 10,\n    alignItems: 'center',\n    width: '45%',\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    marginTop: 10,\n  },\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}