{"ast":null,"code":"\"use strict\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";var _excluded=[\"children\",\"layout\",\"screenOptions\",\"screenLayout\",\"screenListeners\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import{CommonActions}from'@react-navigation/routers';import*as React from'react';import{isValidElementType}from'react-is';import useLatestCallback from'use-latest-callback';import{deepFreeze}from\"./deepFreeze.js\";import{Group}from\"./Group.js\";import{isArrayEqual}from\"./isArrayEqual.js\";import{isRecordEqual}from\"./isRecordEqual.js\";import{NavigationHelpersContext}from\"./NavigationHelpersContext.js\";import{NavigationRouteContext}from\"./NavigationRouteContext.js\";import{NavigationStateContext}from\"./NavigationStateContext.js\";import{PreventRemoveProvider}from\"./PreventRemoveProvider.js\";import{Screen}from\"./Screen.js\";import{PrivateValueStore}from\"./types.js\";import{useChildListeners}from\"./useChildListeners.js\";import{useComponent}from\"./useComponent.js\";import{useCurrentRender}from\"./useCurrentRender.js\";import{useDescriptors}from\"./useDescriptors.js\";import{useEventEmitter}from\"./useEventEmitter.js\";import{useFocusedListenersChildrenAdapter}from\"./useFocusedListenersChildrenAdapter.js\";import{useFocusEvents}from\"./useFocusEvents.js\";import{useIsomorphicLayoutEffect}from\"./useIsomorphicLayoutEffect\";import{useKeyedChildListeners}from\"./useKeyedChildListeners.js\";import{useLazyValue}from\"./useLazyValue.js\";import{useNavigationHelpers}from\"./useNavigationHelpers.js\";import{useOnAction}from\"./useOnAction.js\";import{useOnGetState}from\"./useOnGetState.js\";import{useOnRouteFocus}from\"./useOnRouteFocus.js\";import{useRegisterNavigator}from\"./useRegisterNavigator.js\";import{useScheduleUpdate}from\"./useScheduleUpdate.js\";import{jsx as _jsx}from\"react/jsx-runtime\";PrivateValueStore;var isValidKey=function isValidKey(key){return key===undefined||typeof key==='string'&&key!=='';};var _getRouteConfigsFromChildren=function getRouteConfigsFromChildren(children,groupKey,groupOptions,groupLayout){var configs=React.Children.toArray(children).reduce(function(acc,child){var _child$type,_child$props;if(React.isValidElement(child)){if(child.type===Screen){if(!isValidKey(child.props.navigationKey)){throw new Error(\"Got an invalid 'navigationKey' prop (\"+JSON.stringify(child.props.navigationKey)+\") for the screen '\"+child.props.name+\"'. It must be a non-empty string or 'undefined'.\");}acc.push({keys:[groupKey,child.props.navigationKey],options:groupOptions,layout:groupLayout,props:child.props});return acc;}if(child.type===React.Fragment||child.type===Group){if(!isValidKey(child.props.navigationKey)){throw new Error(\"Got an invalid 'navigationKey' prop (\"+JSON.stringify(child.props.navigationKey)+\") for the group. It must be a non-empty string or 'undefined'.\");}acc.push.apply(acc,_toConsumableArray(_getRouteConfigsFromChildren(child.props.children,child.props.navigationKey,child.type!==Group?groupOptions:groupOptions!=null?[].concat(_toConsumableArray(groupOptions),[child.props.screenOptions]):[child.props.screenOptions],typeof child.props.screenLayout==='function'?child.props.screenLayout:groupLayout)));return acc;}}throw new Error(\"A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found \"+(React.isValidElement(child)?\"'\"+(typeof child.type==='string'?child.type:(_child$type=child.type)==null?void 0:_child$type.name)+\"'\"+(child.props!=null&&typeof child.props==='object'&&'name'in child.props&&(_child$props=child.props)!=null&&_child$props.name?\" for the screen '\"+child.props.name+\"'\":''):typeof child==='object'?JSON.stringify(child):\"'\"+String(child)+\"'\")+\"). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.\");},[]);if(process.env.NODE_ENV!=='production'){configs.forEach(function(config){var _config$props=config.props,name=_config$props.name,children=_config$props.children,component=_config$props.component,getComponent=_config$props.getComponent;if(typeof name!=='string'||!name){throw new Error(\"Got an invalid name (\"+JSON.stringify(name)+\") for the screen. It must be a non-empty string.\");}if(children!=null||component!==undefined||getComponent!==undefined){if(children!=null&&component!==undefined){throw new Error(\"Got both 'component' and 'children' props for the screen '\"+name+\"'. You must pass only one of them.\");}if(children!=null&&getComponent!==undefined){throw new Error(\"Got both 'getComponent' and 'children' props for the screen '\"+name+\"'. You must pass only one of them.\");}if(component!==undefined&&getComponent!==undefined){throw new Error(\"Got both 'component' and 'getComponent' props for the screen '\"+name+\"'. You must pass only one of them.\");}if(children!=null&&typeof children!=='function'){throw new Error(\"Got an invalid value for 'children' prop for the screen '\"+name+\"'. It must be a function returning a React Element.\");}if(component!==undefined&&!isValidElementType(component)){throw new Error(\"Got an invalid value for 'component' prop for the screen '\"+name+\"'. It must be a valid React Component.\");}if(getComponent!==undefined&&typeof getComponent!=='function'){throw new Error(\"Got an invalid value for 'getComponent' prop for the screen '\"+name+\"'. It must be a function returning a React Component.\");}if(typeof component==='function'){if(component.name==='component'){console.warn(\"Looks like you're passing an inline function for 'component' prop for the screen '\"+name+\"' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.\");}else if(/^[a-z]/.test(component.name)){console.warn(\"Got a component with the name '\"+component.name+\"' for the screen '\"+name+\"'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.\");}}}else{throw new Error(\"Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '\"+name+\"'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.\");}});}return configs;};export function useNavigationBuilder(createRouter,options){var navigatorKey=useRegisterNavigator();var route=React.useContext(NavigationRouteContext);var children=options.children,layout=options.layout,screenOptions=options.screenOptions,screenLayout=options.screenLayout,screenListeners=options.screenListeners,rest=_objectWithoutProperties(options,_excluded);var routeConfigs=_getRouteConfigsFromChildren(children);var router=useLazyValue(function(){if(rest.initialRouteName!=null&&routeConfigs.every(function(config){return config.props.name!==rest.initialRouteName;})){throw new Error(\"Couldn't find a screen named '\"+rest.initialRouteName+\"' to use as 'initialRouteName'.\");}return createRouter(rest);});var screens=routeConfigs.reduce(function(acc,config){if(config.props.name in acc){throw new Error(\"A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '\"+config.props.name+\"')\");}acc[config.props.name]=config;return acc;},{});var routeNames=routeConfigs.map(function(config){return config.props.name;});var routeKeyList=routeNames.reduce(function(acc,curr){acc[curr]=screens[curr].keys.map(function(key){return key!=null?key:'';}).join(':');return acc;},{});var routeParamList=routeNames.reduce(function(acc,curr){var initialParams=screens[curr].props.initialParams;acc[curr]=initialParams;return acc;},{});var routeGetIdList=routeNames.reduce(function(acc,curr){return Object.assign(acc,_defineProperty({},curr,screens[curr].props.getId));},{});if(!routeNames.length){throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");}var isStateValid=React.useCallback(function(state){return state.type===undefined||state.type===router.type;},[router.type]);var isStateInitialized=React.useCallback(function(state){return state!==undefined&&state.stale===false&&isStateValid(state);},[isStateValid]);var _React$useContext=React.useContext(NavigationStateContext),currentState=_React$useContext.state,getCurrentState=_React$useContext.getState,setCurrentState=_React$useContext.setState,setKey=_React$useContext.setKey,getKey=_React$useContext.getKey,getIsInitial=_React$useContext.getIsInitial;var stateCleanedUp=React.useRef(false);var setState=useLatestCallback(function(state){if(stateCleanedUp.current){return;}setCurrentState(state);});var _React$useMemo=React.useMemo(function(){var _route$params4,_route$params5,_route$params6;var initialRouteParamList=routeNames.reduce(function(acc,curr){var _route$params,_route$params2,_route$params3;var initialParams=screens[curr].props.initialParams;var initialParamsFromParams=(route==null?void 0:(_route$params=route.params)==null?void 0:_route$params.state)==null&&(route==null?void 0:(_route$params2=route.params)==null?void 0:_route$params2.initial)!==false&&(route==null?void 0:(_route$params3=route.params)==null?void 0:_route$params3.screen)===curr?route.params.params:undefined;acc[curr]=initialParams!==undefined||initialParamsFromParams!==undefined?_objectSpread(_objectSpread({},initialParams),initialParamsFromParams):undefined;return acc;},{});if((currentState===undefined||!isStateValid(currentState))&&(route==null?void 0:(_route$params4=route.params)==null?void 0:_route$params4.state)==null&&!(typeof(route==null?void 0:(_route$params5=route.params)==null?void 0:_route$params5.screen)==='string'&&(route==null?void 0:(_route$params6=route.params)==null?void 0:_route$params6.initial)!==false)){return[router.getInitialState({routeNames:routeNames,routeParamList:initialRouteParamList,routeGetIdList:routeGetIdList}),true];}else{var _route$params7,_route$params8,_route$params9,_stateFromParams;var stateFromParams;if((route==null?void 0:(_route$params7=route.params)==null?void 0:_route$params7.state)!=null){stateFromParams=route.params.state;}else if(typeof(route==null?void 0:(_route$params8=route.params)==null?void 0:_route$params8.screen)==='string'&&(route==null?void 0:(_route$params9=route.params)==null?void 0:_route$params9.initial)!==false){stateFromParams={index:0,routes:[{name:route.params.screen,params:route.params.params,path:route.params.path}]};}return[router.getRehydratedState((_stateFromParams=stateFromParams)!=null?_stateFromParams:currentState,{routeNames:routeNames,routeParamList:initialRouteParamList,routeGetIdList:routeGetIdList}),false];}},[currentState,router,isStateValid]),_React$useMemo2=_slicedToArray(_React$useMemo,2),initializedState=_React$useMemo2[0],isFirstStateInitialization=_React$useMemo2[1];var previousRouteKeyListRef=React.useRef(routeKeyList);React.useEffect(function(){previousRouteKeyListRef.current=routeKeyList;});var previousRouteKeyList=previousRouteKeyListRef.current;var state=isStateInitialized(currentState)?currentState:initializedState;var nextState=state;if(!isArrayEqual(state.routeNames,routeNames)||!isRecordEqual(routeKeyList,previousRouteKeyList)){var navigatorStateForNextRouteNamesChange=options.UNSTABLE_getStateForRouteNamesChange==null?void 0:options.UNSTABLE_getStateForRouteNamesChange(state);nextState=navigatorStateForNextRouteNamesChange?router.getRehydratedState(navigatorStateForNextRouteNamesChange,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList}):router.getStateForRouteNamesChange(state,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList,routeKeyChanges:Object.keys(routeKeyList).filter(function(name){return name in previousRouteKeyList&&routeKeyList[name]!==previousRouteKeyList[name];})});}var previousNestedParamsRef=React.useRef(route==null?void 0:route.params);React.useEffect(function(){previousNestedParamsRef.current=route==null?void 0:route.params;},[route==null?void 0:route.params]);if(route!=null&&route.params){var previousParams=previousNestedParamsRef.current;var action;if(typeof route.params.state==='object'&&route.params.state!=null&&route.params!==previousParams){action=CommonActions.reset(route.params.state);}else if(typeof route.params.screen==='string'&&(route.params.initial===false&&isFirstStateInitialization||route.params!==previousParams)){action=CommonActions.navigate({name:route.params.screen,params:route.params.params,path:route.params.path});}var updatedState=action?router.getStateForAction(nextState,action,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList}):null;nextState=updatedState!==null?router.getRehydratedState(updatedState,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList}):nextState;}var shouldUpdate=state!==nextState;useScheduleUpdate(function(){if(shouldUpdate){setState(nextState);}});state=nextState;React.useEffect(function(){stateCleanedUp.current=false;setKey(navigatorKey);if(!getIsInitial()){setState(nextState);}return function(){if(getCurrentState()!==undefined&&getKey()===navigatorKey){setCurrentState(undefined);stateCleanedUp.current=true;}};},[]);var stateRef=React.useRef(state);stateRef.current=state;useIsomorphicLayoutEffect(function(){stateRef.current=null;});var getState=useLatestCallback(function(){var currentState=getCurrentState();return deepFreeze(isStateInitialized(currentState)?currentState:initializedState);});var emitter=useEventEmitter(function(e){var _ref;var routeNames=[];var route;if(e.target){var _route;route=state.routes.find(function(route){return route.key===e.target;});if((_route=route)!=null&&_route.name){routeNames.push(route.name);}}else{route=state.routes[state.index];routeNames.push.apply(routeNames,_toConsumableArray(Object.keys(screens).filter(function(name){var _route2;return((_route2=route)==null?void 0:_route2.name)===name;})));}if(route==null){return;}var navigation=descriptors[route.key].navigation;var listeners=(_ref=[]).concat.apply(_ref,_toConsumableArray([screenListeners].concat(_toConsumableArray(routeNames.map(function(name){var listeners=screens[name].props.listeners;return listeners;}))).map(function(listeners){var map=typeof listeners==='function'?listeners({route:route,navigation:navigation}):listeners;return map?Object.keys(map).filter(function(type){return type===e.type;}).map(function(type){return map==null?void 0:map[type];}):undefined;}))).filter(function(cb,i,self){return cb&&self.lastIndexOf(cb)===i;});listeners.forEach(function(listener){return listener==null?void 0:listener(e);});});useFocusEvents({state:state,emitter:emitter});React.useEffect(function(){emitter.emit({type:'state',data:{state:state}});},[emitter,state]);var _useChildListeners=useChildListeners(),childListeners=_useChildListeners.listeners,addListener=_useChildListeners.addListener;var _useKeyedChildListene=useKeyedChildListeners(),keyedListeners=_useKeyedChildListene.keyedListeners,addKeyedListener=_useKeyedChildListene.addKeyedListener;var onAction=useOnAction({router:router,getState:getState,setState:setState,key:route==null?void 0:route.key,actionListeners:childListeners.action,beforeRemoveListeners:keyedListeners.beforeRemove,routerConfigOptions:{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList},emitter:emitter});var onRouteFocus=useOnRouteFocus({router:router,key:route==null?void 0:route.key,getState:getState,setState:setState});var navigation=useNavigationHelpers({id:options.id,onAction:onAction,getState:getState,emitter:emitter,router:router,stateRef:stateRef});useFocusedListenersChildrenAdapter({navigation:navigation,focusedListeners:childListeners.focus});useOnGetState({getState:getState,getStateListeners:keyedListeners.getState});var _useDescriptors=useDescriptors({state:state,screens:screens,navigation:navigation,screenOptions:screenOptions,screenLayout:screenLayout,onAction:onAction,getState:getState,setState:setState,onRouteFocus:onRouteFocus,addListener:addListener,addKeyedListener:addKeyedListener,router:router,emitter:emitter}),describe=_useDescriptors.describe,descriptors=_useDescriptors.descriptors;useCurrentRender({state:state,navigation:navigation,descriptors:descriptors});var NavigationContent=useComponent(function(children){var element=layout!=null?layout({state:state,descriptors:descriptors,navigation:navigation,children:children}):children;return _jsx(NavigationHelpersContext.Provider,{value:navigation,children:_jsx(PreventRemoveProvider,{children:element})});});return{state:state,navigation:navigation,describe:describe,descriptors:descriptors,NavigationContent:NavigationContent};}","map":{"version":3,"names":["CommonActions","React","isValidElementType","useLatestCallback","deepFreeze","Group","isArrayEqual","isRecordEqual","NavigationHelpersContext","NavigationRouteContext","NavigationStateContext","PreventRemoveProvider","Screen","PrivateValueStore","useChildListeners","useComponent","useCurrentRender","useDescriptors","useEventEmitter","useFocusedListenersChildrenAdapter","useFocusEvents","useIsomorphicLayoutEffect","useKeyedChildListeners","useLazyValue","useNavigationHelpers","useOnAction","useOnGetState","useOnRouteFocus","useRegisterNavigator","useScheduleUpdate","jsx","_jsx","isValidKey","key","undefined","getRouteConfigsFromChildren","children","groupKey","groupOptions","groupLayout","configs","Children","toArray","reduce","acc","child","_child$type","_child$props","isValidElement","type","props","navigationKey","Error","JSON","stringify","name","push","keys","options","layout","Fragment","apply","_toConsumableArray","concat","screenOptions","screenLayout","String","process","env","NODE_ENV","forEach","config","_config$props","component","getComponent","console","warn","test","useNavigationBuilder","createRouter","navigatorKey","route","useContext","screenListeners","rest","_objectWithoutProperties","_excluded","routeConfigs","router","initialRouteName","every","screens","routeNames","map","routeKeyList","curr","join","routeParamList","initialParams","routeGetIdList","Object","assign","_defineProperty","getId","length","isStateValid","useCallback","state","isStateInitialized","stale","_React$useContext","currentState","getCurrentState","getState","setCurrentState","setState","setKey","getKey","getIsInitial","stateCleanedUp","useRef","current","_React$useMemo","useMemo","_route$params4","_route$params5","_route$params6","initialRouteParamList","_route$params","_route$params2","_route$params3","initialParamsFromParams","params","initial","screen","_objectSpread","getInitialState","_route$params7","_route$params8","_route$params9","_stateFromParams","stateFromParams","index","routes","path","getRehydratedState","_React$useMemo2","_slicedToArray","initializedState","isFirstStateInitialization","previousRouteKeyListRef","useEffect","previousRouteKeyList","nextState","navigatorStateForNextRouteNamesChange","UNSTABLE_getStateForRouteNamesChange","getStateForRouteNamesChange","routeKeyChanges","filter","previousNestedParamsRef","previousParams","action","reset","navigate","updatedState","getStateForAction","shouldUpdate","stateRef","emitter","e","_ref","target","_route","find","_route2","navigation","descriptors","listeners","cb","i","self","lastIndexOf","listener","emit","data","_useChildListeners","childListeners","addListener","_useKeyedChildListene","keyedListeners","addKeyedListener","onAction","actionListeners","beforeRemoveListeners","beforeRemove","routerConfigOptions","onRouteFocus","id","focusedListeners","focus","getStateListeners","_useDescriptors","describe","NavigationContent","element","Provider","value"],"sources":["/home/runner/workspace/MediaCaptureApp/node_modules/@react-navigation/core/src/useNavigationBuilder.tsx"],"sourcesContent":["import {\n  CommonActions,\n  type DefaultRouterOptions,\n  type NavigationAction,\n  type NavigationState,\n  type ParamListBase,\n  type PartialState,\n  type Route,\n  type Router,\n  type RouterConfigOptions,\n  type RouterFactory,\n} from '@react-navigation/routers';\nimport * as React from 'react';\nimport { isValidElementType } from 'react-is';\nimport useLatestCallback from 'use-latest-callback';\n\nimport { deepFreeze } from './deepFreeze';\nimport { Group } from './Group';\nimport { isArrayEqual } from './isArrayEqual';\nimport { isRecordEqual } from './isRecordEqual';\nimport { NavigationHelpersContext } from './NavigationHelpersContext';\nimport { NavigationRouteContext } from './NavigationRouteContext';\nimport { NavigationStateContext } from './NavigationStateContext';\nimport { PreventRemoveProvider } from './PreventRemoveProvider';\nimport { Screen } from './Screen';\nimport {\n  type DefaultNavigatorOptions,\n  type EventMapBase,\n  type EventMapCore,\n  type NavigatorScreenParams,\n  PrivateValueStore,\n  type RouteConfig,\n} from './types';\nimport { useChildListeners } from './useChildListeners';\nimport { useComponent } from './useComponent';\nimport { useCurrentRender } from './useCurrentRender';\nimport { type ScreenConfigWithParent, useDescriptors } from './useDescriptors';\nimport { useEventEmitter } from './useEventEmitter';\nimport { useFocusedListenersChildrenAdapter } from './useFocusedListenersChildrenAdapter';\nimport { useFocusEvents } from './useFocusEvents';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\nimport { useKeyedChildListeners } from './useKeyedChildListeners';\nimport { useLazyValue } from './useLazyValue';\nimport { useNavigationHelpers } from './useNavigationHelpers';\nimport { useOnAction } from './useOnAction';\nimport { useOnGetState } from './useOnGetState';\nimport { useOnRouteFocus } from './useOnRouteFocus';\nimport { useRegisterNavigator } from './useRegisterNavigator';\nimport { useScheduleUpdate } from './useScheduleUpdate';\n\n// This is to make TypeScript compiler happy\nPrivateValueStore;\n\ntype NavigatorRoute = {\n  key: string;\n  params?: NavigatorScreenParams<ParamListBase>;\n};\n\nconst isValidKey = (key: unknown) =>\n  key === undefined || (typeof key === 'string' && key !== '');\n\n/**\n * Extract route config object from React children elements.\n *\n * @param children React Elements to extract the config from.\n */\nconst getRouteConfigsFromChildren = <\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase,\n>(\n  children: React.ReactNode,\n  groupKey?: string,\n  groupOptions?: ScreenConfigWithParent<\n    State,\n    ScreenOptions,\n    EventMap\n  >['options'],\n  groupLayout?: ScreenConfigWithParent<State, ScreenOptions, EventMap>['layout']\n) => {\n  const configs = React.Children.toArray(children).reduce<\n    ScreenConfigWithParent<State, ScreenOptions, EventMap>[]\n  >((acc, child) => {\n    if (React.isValidElement(child)) {\n      if (child.type === Screen) {\n        // We can only extract the config from `Screen` elements\n        // If something else was rendered, it's probably a bug\n\n        if (!isValidKey(child.props.navigationKey)) {\n          throw new Error(\n            `Got an invalid 'navigationKey' prop (${JSON.stringify(\n              child.props.navigationKey\n            )}) for the screen '${\n              child.props.name\n            }'. It must be a non-empty string or 'undefined'.`\n          );\n        }\n\n        acc.push({\n          keys: [groupKey, child.props.navigationKey],\n          options: groupOptions,\n          layout: groupLayout,\n          props: child.props as RouteConfig<\n            ParamListBase,\n            string,\n            State,\n            ScreenOptions,\n            EventMap,\n            unknown\n          >,\n        });\n\n        return acc;\n      }\n\n      if (child.type === React.Fragment || child.type === Group) {\n        if (!isValidKey(child.props.navigationKey)) {\n          throw new Error(\n            `Got an invalid 'navigationKey' prop (${JSON.stringify(\n              child.props.navigationKey\n            )}) for the group. It must be a non-empty string or 'undefined'.`\n          );\n        }\n\n        // When we encounter a fragment or group, we need to dive into its children to extract the configs\n        // This is handy to conditionally define a group of screens\n        acc.push(\n          ...getRouteConfigsFromChildren<State, ScreenOptions, EventMap>(\n            child.props.children,\n            child.props.navigationKey,\n            child.type !== Group\n              ? groupOptions\n              : groupOptions != null\n                ? [...groupOptions, child.props.screenOptions]\n                : [child.props.screenOptions],\n            typeof child.props.screenLayout === 'function'\n              ? child.props.screenLayout\n              : groupLayout\n          )\n        );\n        return acc;\n      }\n    }\n\n    throw new Error(\n      `A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${\n        React.isValidElement(child)\n          ? `'${\n              typeof child.type === 'string' ? child.type : child.type?.name\n            }'${\n              child.props != null &&\n              typeof child.props === 'object' &&\n              'name' in child.props &&\n              child.props?.name\n                ? ` for the screen '${child.props.name}'`\n                : ''\n            }`\n          : typeof child === 'object'\n            ? JSON.stringify(child)\n            : `'${String(child)}'`\n      }). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`\n    );\n  }, []);\n\n  if (process.env.NODE_ENV !== 'production') {\n    configs.forEach((config) => {\n      const { name, children, component, getComponent } = config.props;\n\n      if (typeof name !== 'string' || !name) {\n        throw new Error(\n          `Got an invalid name (${JSON.stringify(\n            name\n          )}) for the screen. It must be a non-empty string.`\n        );\n      }\n\n      if (\n        children != null ||\n        component !== undefined ||\n        getComponent !== undefined\n      ) {\n        if (children != null && component !== undefined) {\n          throw new Error(\n            `Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (children != null && getComponent !== undefined) {\n          throw new Error(\n            `Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (component !== undefined && getComponent !== undefined) {\n          throw new Error(\n            `Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (children != null && typeof children !== 'function') {\n          throw new Error(\n            `Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`\n          );\n        }\n\n        if (component !== undefined && !isValidElementType(component)) {\n          throw new Error(\n            `Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`\n          );\n        }\n\n        if (getComponent !== undefined && typeof getComponent !== 'function') {\n          throw new Error(\n            `Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`\n          );\n        }\n\n        if (typeof component === 'function') {\n          if (component.name === 'component') {\n            // Inline anonymous functions passed in the `component` prop will have the name of the prop\n            // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n            // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n            console.warn(\n              `Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`\n            );\n          } else if (/^[a-z]/.test(component.name)) {\n            console.warn(\n              `Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`\n            );\n          }\n        }\n      } else {\n        throw new Error(\n          `Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`\n        );\n      }\n    });\n  }\n\n  return configs;\n};\n\n/**\n * Hook for building navigators.\n *\n * @param createRouter Factory method which returns router object.\n * @param options Options object containing `children` and additional options for the router.\n * @returns An object containing `state`, `navigation`, `descriptors` objects.\n */\nexport function useNavigationBuilder<\n  State extends NavigationState,\n  RouterOptions extends DefaultRouterOptions,\n  ActionHelpers extends Record<string, (...args: any) => void>,\n  ScreenOptions extends {},\n  EventMap extends Record<string, any>,\n>(\n  createRouter: RouterFactory<State, any, RouterOptions>,\n  options: DefaultNavigatorOptions<\n    ParamListBase,\n    string | undefined,\n    State,\n    ScreenOptions,\n    EventMap,\n    any\n  > &\n    RouterOptions\n) {\n  const navigatorKey = useRegisterNavigator();\n\n  const route = React.useContext(NavigationRouteContext) as\n    | NavigatorRoute\n    | undefined;\n\n  const {\n    children,\n    layout,\n    screenOptions,\n    screenLayout,\n    screenListeners,\n    ...rest\n  } = options;\n\n  const routeConfigs = getRouteConfigsFromChildren<\n    State,\n    ScreenOptions,\n    EventMap\n  >(children);\n\n  const router = useLazyValue<Router<State, any>>(() => {\n    if (\n      rest.initialRouteName != null &&\n      routeConfigs.every(\n        (config) => config.props.name !== rest.initialRouteName\n      )\n    ) {\n      throw new Error(\n        `Couldn't find a screen named '${rest.initialRouteName}' to use as 'initialRouteName'.`\n      );\n    }\n\n    return createRouter(rest as unknown as RouterOptions);\n  });\n\n  const screens = routeConfigs.reduce<\n    Record<string, ScreenConfigWithParent<State, ScreenOptions, EventMap>>\n  >((acc, config) => {\n    if (config.props.name in acc) {\n      throw new Error(\n        `A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`\n      );\n    }\n\n    acc[config.props.name] = config;\n    return acc;\n  }, {});\n\n  const routeNames = routeConfigs.map((config) => config.props.name);\n  const routeKeyList = routeNames.reduce<Record<string, React.Key | undefined>>(\n    (acc, curr) => {\n      acc[curr] = screens[curr].keys.map((key) => key ?? '').join(':');\n      return acc;\n    },\n    {}\n  );\n  const routeParamList = routeNames.reduce<Record<string, object | undefined>>(\n    (acc, curr) => {\n      const { initialParams } = screens[curr].props;\n      acc[curr] = initialParams;\n      return acc;\n    },\n    {}\n  );\n  const routeGetIdList = routeNames.reduce<\n    RouterConfigOptions['routeGetIdList']\n  >(\n    (acc, curr) =>\n      Object.assign(acc, {\n        [curr]: screens[curr].props.getId,\n      }),\n    {}\n  );\n\n  if (!routeNames.length) {\n    throw new Error(\n      \"Couldn't find any screens for the navigator. Have you defined any screens as its children?\"\n    );\n  }\n\n  const isStateValid = React.useCallback(\n    (state: NavigationState | PartialState<NavigationState>) =>\n      state.type === undefined || state.type === router.type,\n    [router.type]\n  );\n\n  const isStateInitialized = React.useCallback(\n    (state: NavigationState | PartialState<NavigationState> | undefined) =>\n      state !== undefined && state.stale === false && isStateValid(state),\n    [isStateValid]\n  );\n\n  const {\n    state: currentState,\n    getState: getCurrentState,\n    setState: setCurrentState,\n    setKey,\n    getKey,\n    getIsInitial,\n  } = React.useContext(NavigationStateContext);\n\n  const stateCleanedUp = React.useRef(false);\n\n  const setState = useLatestCallback(\n    (state: NavigationState | PartialState<NavigationState> | undefined) => {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n\n      setCurrentState(state);\n    }\n  );\n\n  const [initializedState, isFirstStateInitialization] = React.useMemo(() => {\n    const initialRouteParamList = routeNames.reduce<\n      Record<string, object | undefined>\n    >((acc, curr) => {\n      const { initialParams } = screens[curr].props;\n      const initialParamsFromParams =\n        route?.params?.state == null &&\n        route?.params?.initial !== false &&\n        route?.params?.screen === curr\n          ? route.params.params\n          : undefined;\n\n      acc[curr] =\n        initialParams !== undefined || initialParamsFromParams !== undefined\n          ? {\n              ...initialParams,\n              ...initialParamsFromParams,\n            }\n          : undefined;\n\n      return acc;\n    }, {});\n\n    // If the current state isn't initialized on first render, we initialize it\n    // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n    // Otherwise assume that the state was provided as initial state\n    // So we need to rehydrate it to make it usable\n    if (\n      (currentState === undefined || !isStateValid(currentState)) &&\n      route?.params?.state == null &&\n      !(\n        typeof route?.params?.screen === 'string' &&\n        route?.params?.initial !== false\n      )\n    ) {\n      return [\n        router.getInitialState({\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList,\n        }),\n        true,\n      ];\n    } else {\n      let stateFromParams;\n\n      if (route?.params?.state != null) {\n        stateFromParams = route.params.state;\n      } else if (\n        typeof route?.params?.screen === 'string' &&\n        route?.params?.initial !== false\n      ) {\n        stateFromParams = {\n          index: 0,\n          routes: [\n            {\n              name: route.params.screen,\n              params: route.params.params,\n              path: route.params.path,\n            },\n          ],\n        };\n      }\n\n      return [\n        router.getRehydratedState(\n          (stateFromParams ?? currentState) as PartialState<State>,\n          {\n            routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList,\n          }\n        ),\n        false,\n      ];\n    }\n    // We explicitly don't include routeNames, route.params etc. in the dep list\n    // below. We want to avoid forcing a new state to be calculated in those cases\n    // Instead, we handle changes to these in the nextState code below. Note\n    // that some changes to routeConfigs are explicitly ignored, such as changes\n    // to initialParams\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentState, router, isStateValid]);\n\n  const previousRouteKeyListRef = React.useRef(routeKeyList);\n\n  React.useEffect(() => {\n    previousRouteKeyListRef.current = routeKeyList;\n  });\n\n  const previousRouteKeyList = previousRouteKeyListRef.current;\n\n  let state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initialized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState)\n      ? (currentState as State)\n      : (initializedState as State);\n\n  let nextState: State = state;\n\n  if (\n    !isArrayEqual(state.routeNames, routeNames) ||\n    !isRecordEqual(routeKeyList, previousRouteKeyList)\n  ) {\n    const navigatorStateForNextRouteNamesChange =\n      options.UNSTABLE_getStateForRouteNamesChange?.(state);\n    // When the list of route names change, the router should handle it to remove invalid routes\n    nextState = navigatorStateForNextRouteNamesChange\n      ? // @ts-expect-error this is ok\n        router.getRehydratedState(navigatorStateForNextRouteNamesChange, {\n          routeNames,\n          routeParamList,\n          routeGetIdList,\n        })\n      : router.getStateForRouteNamesChange(state, {\n          routeNames,\n          routeParamList,\n          routeGetIdList,\n          routeKeyChanges: Object.keys(routeKeyList).filter(\n            (name) =>\n              name in previousRouteKeyList &&\n              routeKeyList[name] !== previousRouteKeyList[name]\n          ),\n        });\n  }\n\n  const previousNestedParamsRef = React.useRef(route?.params);\n\n  React.useEffect(() => {\n    previousNestedParamsRef.current = route?.params;\n  }, [route?.params]);\n\n  if (route?.params) {\n    const previousParams = previousNestedParamsRef.current;\n\n    let action: CommonActions.Action | undefined;\n\n    if (\n      typeof route.params.state === 'object' &&\n      route.params.state != null &&\n      route.params !== previousParams\n    ) {\n      // If the route was updated with new state, we should reset to it\n      action = CommonActions.reset(route.params.state);\n    } else if (\n      typeof route.params.screen === 'string' &&\n      ((route.params.initial === false && isFirstStateInitialization) ||\n        route.params !== previousParams)\n    ) {\n      // If the route was updated with new screen name and/or params, we should navigate there\n      action = CommonActions.navigate({\n        name: route.params.screen,\n        params: route.params.params,\n        path: route.params.path,\n      });\n    }\n\n    // The update should be limited to current navigator only, so we call the router manually\n    const updatedState = action\n      ? router.getStateForAction(nextState, action, {\n          routeNames,\n          routeParamList,\n          routeGetIdList,\n        })\n      : null;\n\n    nextState =\n      updatedState !== null\n        ? router.getRehydratedState(updatedState, {\n            routeNames,\n            routeParamList,\n            routeGetIdList,\n          })\n        : nextState;\n  }\n\n  const shouldUpdate = state !== nextState;\n\n  useScheduleUpdate(() => {\n    if (shouldUpdate) {\n      // If the state needs to be updated, we'll schedule an update\n      setState(nextState);\n    }\n  });\n\n  // The up-to-date state will come in next render, but we don't need to wait for it\n  // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n  // So we override the state object we return to use the latest state as soon as possible\n  state = nextState;\n\n  React.useEffect(() => {\n    // In strict mode, React will double-invoke effects.\n    // So we need to reset the flag if component was not unmounted\n    stateCleanedUp.current = false;\n\n    setKey(navigatorKey);\n\n    if (!getIsInitial()) {\n      // If it's not initial render, we need to update the state\n      // This will make sure that our container gets notifier of state changes due to new mounts\n      // This is necessary for proper screen tracking, URL updates etc.\n      setState(nextState);\n    }\n\n    return () => {\n      // We need to clean up state for this navigator on unmount\n      if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n        setCurrentState(undefined);\n        stateCleanedUp.current = true;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // In some cases (e.g. route names change), internal state might have changed\n  // But it hasn't been committed yet, so hasn't propagated to the sync external store\n  // During this time, we need to return the internal state in `getState`\n  // Otherwise it can result in inconsistent state during render in children\n  // To avoid this, we use a ref for render phase, and immediately clear it on commit\n  const stateRef = React.useRef<State | null>(state);\n\n  stateRef.current = state;\n\n  useIsomorphicLayoutEffect(() => {\n    stateRef.current = null;\n  });\n\n  const getState = useLatestCallback((): State => {\n    const currentState = getCurrentState();\n\n    return deepFreeze(\n      (isStateInitialized(currentState)\n        ? currentState\n        : initializedState) as State\n    );\n  });\n\n  const emitter = useEventEmitter<EventMapCore<State>>((e) => {\n    const routeNames = [];\n\n    let route: Route<string> | undefined;\n\n    if (e.target) {\n      route = state.routes.find((route) => route.key === e.target);\n\n      if (route?.name) {\n        routeNames.push(route.name);\n      }\n    } else {\n      route = state.routes[state.index];\n      routeNames.push(\n        ...Object.keys(screens).filter((name) => route?.name === name)\n      );\n    }\n\n    if (route == null) {\n      return;\n    }\n\n    const navigation = descriptors[route.key].navigation;\n\n    const listeners = ([] as (((e: any) => void) | undefined)[])\n      .concat(\n        // Get an array of listeners for all screens + common listeners on navigator\n        ...[\n          screenListeners,\n          ...routeNames.map((name) => {\n            const { listeners } = screens[name].props;\n            return listeners;\n          }),\n        ].map((listeners) => {\n          const map =\n            typeof listeners === 'function'\n              ? listeners({ route: route as any, navigation })\n              : listeners;\n\n          return map\n            ? Object.keys(map)\n                .filter((type) => type === e.type)\n                .map((type) => map?.[type])\n            : undefined;\n        })\n      )\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n\n    listeners.forEach((listener) => listener?.(e));\n  });\n\n  useFocusEvents({ state, emitter });\n\n  React.useEffect(() => {\n    emitter.emit({ type: 'state', data: { state } });\n  }, [emitter, state]);\n\n  const { listeners: childListeners, addListener } = useChildListeners();\n\n  const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n  const onAction = useOnAction({\n    router,\n    getState,\n    setState,\n    key: route?.key,\n    actionListeners: childListeners.action,\n    beforeRemoveListeners: keyedListeners.beforeRemove,\n    routerConfigOptions: {\n      routeNames,\n      routeParamList,\n      routeGetIdList,\n    },\n    emitter,\n  });\n\n  const onRouteFocus = useOnRouteFocus({\n    router,\n    key: route?.key,\n    getState,\n    setState,\n  });\n\n  const navigation = useNavigationHelpers<\n    State,\n    ActionHelpers,\n    NavigationAction,\n    EventMap\n  >({\n    id: options.id,\n    onAction,\n    getState,\n    emitter,\n    router,\n    stateRef,\n  });\n\n  useFocusedListenersChildrenAdapter({\n    navigation,\n    focusedListeners: childListeners.focus,\n  });\n\n  useOnGetState({\n    getState,\n    getStateListeners: keyedListeners.getState,\n  });\n\n  const { describe, descriptors } = useDescriptors<\n    State,\n    ActionHelpers,\n    ScreenOptions,\n    EventMap\n  >({\n    state,\n    screens,\n    navigation,\n    screenOptions,\n    screenLayout,\n    onAction,\n    getState,\n    setState,\n    onRouteFocus,\n    addListener,\n    addKeyedListener,\n    router,\n    // @ts-expect-error: this should have both core and custom events, but too much work right now\n    emitter,\n  });\n\n  useCurrentRender({\n    state,\n    navigation,\n    descriptors,\n  });\n\n  const NavigationContent = useComponent((children: React.ReactNode) => {\n    const element =\n      layout != null\n        ? layout({\n            state,\n            descriptors,\n            navigation,\n            children,\n          })\n        : children;\n\n    return (\n      <NavigationHelpersContext.Provider value={navigation}>\n        <PreventRemoveProvider>{element}</PreventRemoveProvider>\n      </NavigationHelpersContext.Provider>\n    );\n  });\n\n  return {\n    state,\n    navigation,\n    describe,\n    descriptors,\n    NavigationContent,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}